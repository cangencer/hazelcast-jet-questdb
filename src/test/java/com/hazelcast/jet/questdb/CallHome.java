/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hazelcast.jet.questdb;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CallHome extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = -8571274128784658291L;
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CallHome\",\"namespace\":\"com.hazelcast.jet.examples.callhomes.generated\",\"fields\":[{\"name\":\"ip\",\"type\":[\"null\",\"string\"]},{\"name\":\"version\",\"type\":[\"null\",\"string\"]},{\"name\":\"pingTime\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-micros\"}]},{\"name\":\"machineId\",\"type\":[\"null\",\"string\"]},{\"name\":\"enterprise\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"license\",\"type\":[\"null\",\"string\"]},{\"name\":\"pardotId\",\"type\":[\"null\",\"string\"]},{\"name\":\"clusterId\",\"type\":[\"null\",\"string\"]},{\"name\":\"clusterSize\",\"type\":[\"null\",\"string\"]},{\"name\":\"clientsSize\",\"type\":[\"null\",\"string\"]},{\"name\":\"org\",\"type\":[\"null\",\"string\"]},{\"name\":\"city\",\"type\":[\"null\",\"string\"]},{\"name\":\"country\",\"type\":[\"null\",\"string\"]},{\"name\":\"lat\",\"type\":[\"null\",\"string\"]},{\"name\":\"long\",\"type\":[\"null\",\"string\"]},{\"name\":\"HDMemoryInGB\",\"type\":[\"null\",\"string\"]},{\"name\":\"connectedClientsCPP\",\"type\":[\"null\",\"string\"]},{\"name\":\"connectedClientsDotNet\",\"type\":[\"null\",\"string\"]},{\"name\":\"connectedClientsJava\",\"type\":[\"null\",\"string\"]},{\"name\":\"clusterUpTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"nodeUptime\",\"type\":[\"null\",\"long\"]},{\"name\":\"osName\",\"type\":[\"null\",\"string\"]},{\"name\":\"osArch\",\"type\":[\"null\",\"string\"]},{\"name\":\"osVersion\",\"type\":[\"null\",\"string\"]},{\"name\":\"jvmName\",\"type\":[\"null\",\"string\"]},{\"name\":\"jvmVersion\",\"type\":[\"null\",\"string\"]},{\"name\":\"connectedClientsNodeJS\",\"type\":[\"null\",\"string\"]},{\"name\":\"connectedClientsPython\",\"type\":[\"null\",\"string\"]},{\"name\":\"state\",\"type\":[\"null\",\"string\"]},{\"name\":\"jetVersion\",\"type\":[\"null\",\"string\"]},{\"name\":\"mcVersion\",\"type\":[\"null\",\"string\"]},{\"name\":\"mcLicense\",\"type\":[\"null\",\"string\"]},{\"name\":\"connectedClientsGo\",\"type\":[\"null\",\"string\"]},{\"name\":\"oem\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"groupVersion\",\"type\":[\"null\",\"string\"]}]}");
    public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

    private static SpecificData MODEL$ = new SpecificData();

    private static final BinaryMessageEncoder<CallHome> ENCODER =
            new BinaryMessageEncoder<CallHome>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<CallHome> DECODER =
            new BinaryMessageDecoder<CallHome>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     */
    public static BinaryMessageDecoder<CallHome> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     */
    public static BinaryMessageDecoder<CallHome> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<CallHome>(MODEL$, SCHEMA$, resolver);
    }

    /** Serializes this CallHome to a ByteBuffer. */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /** Deserializes a CallHome from a ByteBuffer. */
    public static CallHome fromByteBuffer(
            java.nio.ByteBuffer b) throws java.io.IOException {
        return DECODER.decode(b);
    }

    @Deprecated public java.lang.CharSequence ip;
    @Deprecated public java.lang.CharSequence version;
    @Deprecated public java.lang.Long pingTime;
    @Deprecated public java.lang.CharSequence machineId;
    @Deprecated public java.lang.Boolean enterprise;
    @Deprecated public java.lang.CharSequence license;
    @Deprecated public java.lang.CharSequence pardotId;
    @Deprecated public java.lang.CharSequence clusterId;
    @Deprecated public java.lang.CharSequence clusterSize;
    @Deprecated public java.lang.CharSequence clientsSize;
    @Deprecated public java.lang.CharSequence org;
    @Deprecated public java.lang.CharSequence city;
    @Deprecated public java.lang.CharSequence country;
    @Deprecated public java.lang.CharSequence lat;
    @Deprecated public java.lang.CharSequence long$;
    @Deprecated public java.lang.CharSequence HDMemoryInGB;
    @Deprecated public java.lang.CharSequence connectedClientsCPP;
    @Deprecated public java.lang.CharSequence connectedClientsDotNet;
    @Deprecated public java.lang.CharSequence connectedClientsJava;
    @Deprecated public java.lang.Long clusterUpTime;
    @Deprecated public java.lang.Long nodeUptime;
    @Deprecated public java.lang.CharSequence osName;
    @Deprecated public java.lang.CharSequence osArch;
    @Deprecated public java.lang.CharSequence osVersion;
    @Deprecated public java.lang.CharSequence jvmName;
    @Deprecated public java.lang.CharSequence jvmVersion;
    @Deprecated public java.lang.CharSequence connectedClientsNodeJS;
    @Deprecated public java.lang.CharSequence connectedClientsPython;
    @Deprecated public java.lang.CharSequence state;
    @Deprecated public java.lang.CharSequence jetVersion;
    @Deprecated public java.lang.CharSequence mcVersion;
    @Deprecated public java.lang.CharSequence mcLicense;
    @Deprecated public java.lang.CharSequence connectedClientsGo;
    @Deprecated public java.lang.Boolean oem;
    @Deprecated public java.lang.CharSequence groupVersion;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public CallHome() {}

    /**
     * All-args constructor.
     * @param ip The new value for ip
     * @param version The new value for version
     * @param pingTime The new value for pingTime
     * @param machineId The new value for machineId
     * @param enterprise The new value for enterprise
     * @param license The new value for license
     * @param pardotId The new value for pardotId
     * @param clusterId The new value for clusterId
     * @param clusterSize The new value for clusterSize
     * @param clientsSize The new value for clientsSize
     * @param org The new value for org
     * @param city The new value for city
     * @param country The new value for country
     * @param lat The new value for lat
     * @param long$ The new value for long
     * @param HDMemoryInGB The new value for HDMemoryInGB
     * @param connectedClientsCPP The new value for connectedClientsCPP
     * @param connectedClientsDotNet The new value for connectedClientsDotNet
     * @param connectedClientsJava The new value for connectedClientsJava
     * @param clusterUpTime The new value for clusterUpTime
     * @param nodeUptime The new value for nodeUptime
     * @param osName The new value for osName
     * @param osArch The new value for osArch
     * @param osVersion The new value for osVersion
     * @param jvmName The new value for jvmName
     * @param jvmVersion The new value for jvmVersion
     * @param connectedClientsNodeJS The new value for connectedClientsNodeJS
     * @param connectedClientsPython The new value for connectedClientsPython
     * @param state The new value for state
     * @param jetVersion The new value for jetVersion
     * @param mcVersion The new value for mcVersion
     * @param mcLicense The new value for mcLicense
     * @param connectedClientsGo The new value for connectedClientsGo
     * @param oem The new value for oem
     * @param groupVersion The new value for groupVersion
     */
    public CallHome(java.lang.CharSequence ip, java.lang.CharSequence version, java.lang.Long pingTime, java.lang.CharSequence machineId, java.lang.Boolean enterprise, java.lang.CharSequence license, java.lang.CharSequence pardotId, java.lang.CharSequence clusterId, java.lang.CharSequence clusterSize, java.lang.CharSequence clientsSize, java.lang.CharSequence org, java.lang.CharSequence city, java.lang.CharSequence country, java.lang.CharSequence lat, java.lang.CharSequence long$, java.lang.CharSequence HDMemoryInGB, java.lang.CharSequence connectedClientsCPP, java.lang.CharSequence connectedClientsDotNet, java.lang.CharSequence connectedClientsJava, java.lang.Long clusterUpTime, java.lang.Long nodeUptime, java.lang.CharSequence osName, java.lang.CharSequence osArch, java.lang.CharSequence osVersion, java.lang.CharSequence jvmName, java.lang.CharSequence jvmVersion, java.lang.CharSequence connectedClientsNodeJS, java.lang.CharSequence connectedClientsPython, java.lang.CharSequence state, java.lang.CharSequence jetVersion, java.lang.CharSequence mcVersion, java.lang.CharSequence mcLicense, java.lang.CharSequence connectedClientsGo, java.lang.Boolean oem, java.lang.CharSequence groupVersion) {
        this.ip = ip;
        this.version = version;
        this.pingTime = pingTime;
        this.machineId = machineId;
        this.enterprise = enterprise;
        this.license = license;
        this.pardotId = pardotId;
        this.clusterId = clusterId;
        this.clusterSize = clusterSize;
        this.clientsSize = clientsSize;
        this.org = org;
        this.city = city;
        this.country = country;
        this.lat = lat;
        this.long$ = long$;
        this.HDMemoryInGB = HDMemoryInGB;
        this.connectedClientsCPP = connectedClientsCPP;
        this.connectedClientsDotNet = connectedClientsDotNet;
        this.connectedClientsJava = connectedClientsJava;
        this.clusterUpTime = clusterUpTime;
        this.nodeUptime = nodeUptime;
        this.osName = osName;
        this.osArch = osArch;
        this.osVersion = osVersion;
        this.jvmName = jvmName;
        this.jvmVersion = jvmVersion;
        this.connectedClientsNodeJS = connectedClientsNodeJS;
        this.connectedClientsPython = connectedClientsPython;
        this.state = state;
        this.jetVersion = jetVersion;
        this.mcVersion = mcVersion;
        this.mcLicense = mcLicense;
        this.connectedClientsGo = connectedClientsGo;
        this.oem = oem;
        this.groupVersion = groupVersion;
    }

    public org.apache.avro.Schema getSchema() { return SCHEMA$; }
    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0: return ip;
            case 1: return version;
            case 2: return pingTime;
            case 3: return machineId;
            case 4: return enterprise;
            case 5: return license;
            case 6: return pardotId;
            case 7: return clusterId;
            case 8: return clusterSize;
            case 9: return clientsSize;
            case 10: return org;
            case 11: return city;
            case 12: return country;
            case 13: return lat;
            case 14: return long$;
            case 15: return HDMemoryInGB;
            case 16: return connectedClientsCPP;
            case 17: return connectedClientsDotNet;
            case 18: return connectedClientsJava;
            case 19: return clusterUpTime;
            case 20: return nodeUptime;
            case 21: return osName;
            case 22: return osArch;
            case 23: return osVersion;
            case 24: return jvmName;
            case 25: return jvmVersion;
            case 26: return connectedClientsNodeJS;
            case 27: return connectedClientsPython;
            case 28: return state;
            case 29: return jetVersion;
            case 30: return mcVersion;
            case 31: return mcLicense;
            case 32: return connectedClientsGo;
            case 33: return oem;
            case 34: return groupVersion;
            default: throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value="unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0: ip = (java.lang.CharSequence)value$; break;
            case 1: version = (java.lang.CharSequence)value$; break;
            case 2: pingTime = (java.lang.Long)value$; break;
            case 3: machineId = (java.lang.CharSequence)value$; break;
            case 4: enterprise = (java.lang.Boolean)value$; break;
            case 5: license = (java.lang.CharSequence)value$; break;
            case 6: pardotId = (java.lang.CharSequence)value$; break;
            case 7: clusterId = (java.lang.CharSequence)value$; break;
            case 8: clusterSize = (java.lang.CharSequence)value$; break;
            case 9: clientsSize = (java.lang.CharSequence)value$; break;
            case 10: org = (java.lang.CharSequence)value$; break;
            case 11: city = (java.lang.CharSequence)value$; break;
            case 12: country = (java.lang.CharSequence)value$; break;
            case 13: lat = (java.lang.CharSequence)value$; break;
            case 14: long$ = (java.lang.CharSequence)value$; break;
            case 15: HDMemoryInGB = (java.lang.CharSequence)value$; break;
            case 16: connectedClientsCPP = (java.lang.CharSequence)value$; break;
            case 17: connectedClientsDotNet = (java.lang.CharSequence)value$; break;
            case 18: connectedClientsJava = (java.lang.CharSequence)value$; break;
            case 19: clusterUpTime = (java.lang.Long)value$; break;
            case 20: nodeUptime = (java.lang.Long)value$; break;
            case 21: osName = (java.lang.CharSequence)value$; break;
            case 22: osArch = (java.lang.CharSequence)value$; break;
            case 23: osVersion = (java.lang.CharSequence)value$; break;
            case 24: jvmName = (java.lang.CharSequence)value$; break;
            case 25: jvmVersion = (java.lang.CharSequence)value$; break;
            case 26: connectedClientsNodeJS = (java.lang.CharSequence)value$; break;
            case 27: connectedClientsPython = (java.lang.CharSequence)value$; break;
            case 28: state = (java.lang.CharSequence)value$; break;
            case 29: jetVersion = (java.lang.CharSequence)value$; break;
            case 30: mcVersion = (java.lang.CharSequence)value$; break;
            case 31: mcLicense = (java.lang.CharSequence)value$; break;
            case 32: connectedClientsGo = (java.lang.CharSequence)value$; break;
            case 33: oem = (java.lang.Boolean)value$; break;
            case 34: groupVersion = (java.lang.CharSequence)value$; break;
            default: throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'ip' field.
     * @return The value of the 'ip' field.
     */
    public java.lang.CharSequence getIp() {
        return ip;
    }

    /**
     * Sets the value of the 'ip' field.
     * @param value the value to set.
     */
    public void setIp(java.lang.CharSequence value) {
        this.ip = value;
    }

    /**
     * Gets the value of the 'version' field.
     * @return The value of the 'version' field.
     */
    public java.lang.CharSequence getVersion() {
        return version;
    }

    /**
     * Sets the value of the 'version' field.
     * @param value the value to set.
     */
    public void setVersion(java.lang.CharSequence value) {
        this.version = value;
    }

    /**
     * Gets the value of the 'pingTime' field.
     * @return The value of the 'pingTime' field.
     */
    public java.lang.Long getPingTime() {
        return pingTime;
    }

    /**
     * Sets the value of the 'pingTime' field.
     * @param value the value to set.
     */
    public void setPingTime(java.lang.Long value) {
        this.pingTime = value;
    }

    /**
     * Gets the value of the 'machineId' field.
     * @return The value of the 'machineId' field.
     */
    public java.lang.CharSequence getMachineId() {
        return machineId;
    }

    /**
     * Sets the value of the 'machineId' field.
     * @param value the value to set.
     */
    public void setMachineId(java.lang.CharSequence value) {
        this.machineId = value;
    }

    /**
     * Gets the value of the 'enterprise' field.
     * @return The value of the 'enterprise' field.
     */
    public java.lang.Boolean getEnterprise() {
        return enterprise;
    }

    /**
     * Sets the value of the 'enterprise' field.
     * @param value the value to set.
     */
    public void setEnterprise(java.lang.Boolean value) {
        this.enterprise = value;
    }

    /**
     * Gets the value of the 'license' field.
     * @return The value of the 'license' field.
     */
    public java.lang.CharSequence getLicense() {
        return license;
    }

    /**
     * Sets the value of the 'license' field.
     * @param value the value to set.
     */
    public void setLicense(java.lang.CharSequence value) {
        this.license = value;
    }

    /**
     * Gets the value of the 'pardotId' field.
     * @return The value of the 'pardotId' field.
     */
    public java.lang.CharSequence getPardotId() {
        return pardotId;
    }

    /**
     * Sets the value of the 'pardotId' field.
     * @param value the value to set.
     */
    public void setPardotId(java.lang.CharSequence value) {
        this.pardotId = value;
    }

    /**
     * Gets the value of the 'clusterId' field.
     * @return The value of the 'clusterId' field.
     */
    public java.lang.CharSequence getClusterId() {
        return clusterId;
    }

    /**
     * Sets the value of the 'clusterId' field.
     * @param value the value to set.
     */
    public void setClusterId(java.lang.CharSequence value) {
        this.clusterId = value;
    }

    /**
     * Gets the value of the 'clusterSize' field.
     * @return The value of the 'clusterSize' field.
     */
    public java.lang.CharSequence getClusterSize() {
        return clusterSize;
    }

    /**
     * Sets the value of the 'clusterSize' field.
     * @param value the value to set.
     */
    public void setClusterSize(java.lang.CharSequence value) {
        this.clusterSize = value;
    }

    /**
     * Gets the value of the 'clientsSize' field.
     * @return The value of the 'clientsSize' field.
     */
    public java.lang.CharSequence getClientsSize() {
        return clientsSize;
    }

    /**
     * Sets the value of the 'clientsSize' field.
     * @param value the value to set.
     */
    public void setClientsSize(java.lang.CharSequence value) {
        this.clientsSize = value;
    }

    /**
     * Gets the value of the 'org' field.
     * @return The value of the 'org' field.
     */
    public java.lang.CharSequence getOrg() {
        return org;
    }

    /**
     * Sets the value of the 'org' field.
     * @param value the value to set.
     */
    public void setOrg(java.lang.CharSequence value) {
        this.org = value;
    }

    /**
     * Gets the value of the 'city' field.
     * @return The value of the 'city' field.
     */
    public java.lang.CharSequence getCity() {
        return city;
    }

    /**
     * Sets the value of the 'city' field.
     * @param value the value to set.
     */
    public void setCity(java.lang.CharSequence value) {
        this.city = value;
    }

    /**
     * Gets the value of the 'country' field.
     * @return The value of the 'country' field.
     */
    public java.lang.CharSequence getCountry() {
        return country;
    }

    /**
     * Sets the value of the 'country' field.
     * @param value the value to set.
     */
    public void setCountry(java.lang.CharSequence value) {
        this.country = value;
    }

    /**
     * Gets the value of the 'lat' field.
     * @return The value of the 'lat' field.
     */
    public java.lang.CharSequence getLat() {
        return lat;
    }

    /**
     * Sets the value of the 'lat' field.
     * @param value the value to set.
     */
    public void setLat(java.lang.CharSequence value) {
        this.lat = value;
    }

    /**
     * Gets the value of the 'long$' field.
     * @return The value of the 'long$' field.
     */
    public java.lang.CharSequence getLong$() {
        return long$;
    }

    /**
     * Sets the value of the 'long$' field.
     * @param value the value to set.
     */
    public void setLong$(java.lang.CharSequence value) {
        this.long$ = value;
    }

    /**
     * Gets the value of the 'HDMemoryInGB' field.
     * @return The value of the 'HDMemoryInGB' field.
     */
    public java.lang.CharSequence getHDMemoryInGB() {
        return HDMemoryInGB;
    }

    /**
     * Sets the value of the 'HDMemoryInGB' field.
     * @param value the value to set.
     */
    public void setHDMemoryInGB(java.lang.CharSequence value) {
        this.HDMemoryInGB = value;
    }

    /**
     * Gets the value of the 'connectedClientsCPP' field.
     * @return The value of the 'connectedClientsCPP' field.
     */
    public java.lang.CharSequence getConnectedClientsCPP() {
        return connectedClientsCPP;
    }

    /**
     * Sets the value of the 'connectedClientsCPP' field.
     * @param value the value to set.
     */
    public void setConnectedClientsCPP(java.lang.CharSequence value) {
        this.connectedClientsCPP = value;
    }

    /**
     * Gets the value of the 'connectedClientsDotNet' field.
     * @return The value of the 'connectedClientsDotNet' field.
     */
    public java.lang.CharSequence getConnectedClientsDotNet() {
        return connectedClientsDotNet;
    }

    /**
     * Sets the value of the 'connectedClientsDotNet' field.
     * @param value the value to set.
     */
    public void setConnectedClientsDotNet(java.lang.CharSequence value) {
        this.connectedClientsDotNet = value;
    }

    /**
     * Gets the value of the 'connectedClientsJava' field.
     * @return The value of the 'connectedClientsJava' field.
     */
    public java.lang.CharSequence getConnectedClientsJava() {
        return connectedClientsJava;
    }

    /**
     * Sets the value of the 'connectedClientsJava' field.
     * @param value the value to set.
     */
    public void setConnectedClientsJava(java.lang.CharSequence value) {
        this.connectedClientsJava = value;
    }

    /**
     * Gets the value of the 'clusterUpTime' field.
     * @return The value of the 'clusterUpTime' field.
     */
    public java.lang.Long getClusterUpTime() {
        return clusterUpTime;
    }

    /**
     * Sets the value of the 'clusterUpTime' field.
     * @param value the value to set.
     */
    public void setClusterUpTime(java.lang.Long value) {
        this.clusterUpTime = value;
    }

    /**
     * Gets the value of the 'nodeUptime' field.
     * @return The value of the 'nodeUptime' field.
     */
    public java.lang.Long getNodeUptime() {
        return nodeUptime;
    }

    /**
     * Sets the value of the 'nodeUptime' field.
     * @param value the value to set.
     */
    public void setNodeUptime(java.lang.Long value) {
        this.nodeUptime = value;
    }

    /**
     * Gets the value of the 'osName' field.
     * @return The value of the 'osName' field.
     */
    public java.lang.CharSequence getOsName() {
        return osName;
    }

    /**
     * Sets the value of the 'osName' field.
     * @param value the value to set.
     */
    public void setOsName(java.lang.CharSequence value) {
        this.osName = value;
    }

    /**
     * Gets the value of the 'osArch' field.
     * @return The value of the 'osArch' field.
     */
    public java.lang.CharSequence getOsArch() {
        return osArch;
    }

    /**
     * Sets the value of the 'osArch' field.
     * @param value the value to set.
     */
    public void setOsArch(java.lang.CharSequence value) {
        this.osArch = value;
    }

    /**
     * Gets the value of the 'osVersion' field.
     * @return The value of the 'osVersion' field.
     */
    public java.lang.CharSequence getOsVersion() {
        return osVersion;
    }

    /**
     * Sets the value of the 'osVersion' field.
     * @param value the value to set.
     */
    public void setOsVersion(java.lang.CharSequence value) {
        this.osVersion = value;
    }

    /**
     * Gets the value of the 'jvmName' field.
     * @return The value of the 'jvmName' field.
     */
    public java.lang.CharSequence getJvmName() {
        return jvmName;
    }

    /**
     * Sets the value of the 'jvmName' field.
     * @param value the value to set.
     */
    public void setJvmName(java.lang.CharSequence value) {
        this.jvmName = value;
    }

    /**
     * Gets the value of the 'jvmVersion' field.
     * @return The value of the 'jvmVersion' field.
     */
    public java.lang.CharSequence getJvmVersion() {
        return jvmVersion;
    }

    /**
     * Sets the value of the 'jvmVersion' field.
     * @param value the value to set.
     */
    public void setJvmVersion(java.lang.CharSequence value) {
        this.jvmVersion = value;
    }

    /**
     * Gets the value of the 'connectedClientsNodeJS' field.
     * @return The value of the 'connectedClientsNodeJS' field.
     */
    public java.lang.CharSequence getConnectedClientsNodeJS() {
        return connectedClientsNodeJS;
    }

    /**
     * Sets the value of the 'connectedClientsNodeJS' field.
     * @param value the value to set.
     */
    public void setConnectedClientsNodeJS(java.lang.CharSequence value) {
        this.connectedClientsNodeJS = value;
    }

    /**
     * Gets the value of the 'connectedClientsPython' field.
     * @return The value of the 'connectedClientsPython' field.
     */
    public java.lang.CharSequence getConnectedClientsPython() {
        return connectedClientsPython;
    }

    /**
     * Sets the value of the 'connectedClientsPython' field.
     * @param value the value to set.
     */
    public void setConnectedClientsPython(java.lang.CharSequence value) {
        this.connectedClientsPython = value;
    }

    /**
     * Gets the value of the 'state' field.
     * @return The value of the 'state' field.
     */
    public java.lang.CharSequence getState() {
        return state;
    }

    /**
     * Sets the value of the 'state' field.
     * @param value the value to set.
     */
    public void setState(java.lang.CharSequence value) {
        this.state = value;
    }

    /**
     * Gets the value of the 'jetVersion' field.
     * @return The value of the 'jetVersion' field.
     */
    public java.lang.CharSequence getJetVersion() {
        return jetVersion;
    }

    /**
     * Sets the value of the 'jetVersion' field.
     * @param value the value to set.
     */
    public void setJetVersion(java.lang.CharSequence value) {
        this.jetVersion = value;
    }

    /**
     * Gets the value of the 'mcVersion' field.
     * @return The value of the 'mcVersion' field.
     */
    public java.lang.CharSequence getMcVersion() {
        return mcVersion;
    }

    /**
     * Sets the value of the 'mcVersion' field.
     * @param value the value to set.
     */
    public void setMcVersion(java.lang.CharSequence value) {
        this.mcVersion = value;
    }

    /**
     * Gets the value of the 'mcLicense' field.
     * @return The value of the 'mcLicense' field.
     */
    public java.lang.CharSequence getMcLicense() {
        return mcLicense;
    }

    /**
     * Sets the value of the 'mcLicense' field.
     * @param value the value to set.
     */
    public void setMcLicense(java.lang.CharSequence value) {
        this.mcLicense = value;
    }

    /**
     * Gets the value of the 'connectedClientsGo' field.
     * @return The value of the 'connectedClientsGo' field.
     */
    public java.lang.CharSequence getConnectedClientsGo() {
        return connectedClientsGo;
    }

    /**
     * Sets the value of the 'connectedClientsGo' field.
     * @param value the value to set.
     */
    public void setConnectedClientsGo(java.lang.CharSequence value) {
        this.connectedClientsGo = value;
    }

    /**
     * Gets the value of the 'oem' field.
     * @return The value of the 'oem' field.
     */
    public java.lang.Boolean getOem() {
        return oem;
    }

    /**
     * Sets the value of the 'oem' field.
     * @param value the value to set.
     */
    public void setOem(java.lang.Boolean value) {
        this.oem = value;
    }

    /**
     * Gets the value of the 'groupVersion' field.
     * @return The value of the 'groupVersion' field.
     */
    public java.lang.CharSequence getGroupVersion() {
        return groupVersion;
    }

    /**
     * Sets the value of the 'groupVersion' field.
     * @param value the value to set.
     */
    public void setGroupVersion(java.lang.CharSequence value) {
        this.groupVersion = value;
    }

    /**
     * Creates a new CallHome RecordBuilder.
     * @return A new CallHome RecordBuilder
     */
    public static CallHome.Builder newBuilder() {
        return new CallHome.Builder();
    }

    /**
     * Creates a new CallHome RecordBuilder by copying an existing Builder.
     * @param other The existing builder to copy.
     * @return A new CallHome RecordBuilder
     */
    public static CallHome.Builder newBuilder(CallHome.Builder other) {
        return new CallHome.Builder(other);
    }

    /**
     * Creates a new CallHome RecordBuilder by copying an existing CallHome instance.
     * @param other The existing instance to copy.
     * @return A new CallHome RecordBuilder
     */
    public static CallHome.Builder newBuilder(CallHome other) {
        return new CallHome.Builder(other);
    }

    /**
     * RecordBuilder for CallHome instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CallHome>
            implements org.apache.avro.data.RecordBuilder<CallHome> {

        private java.lang.CharSequence ip;
        private java.lang.CharSequence version;
        private java.lang.Long pingTime;
        private java.lang.CharSequence machineId;
        private java.lang.Boolean enterprise;
        private java.lang.CharSequence license;
        private java.lang.CharSequence pardotId;
        private java.lang.CharSequence clusterId;
        private java.lang.CharSequence clusterSize;
        private java.lang.CharSequence clientsSize;
        private java.lang.CharSequence org;
        private java.lang.CharSequence city;
        private java.lang.CharSequence country;
        private java.lang.CharSequence lat;
        private java.lang.CharSequence long$;
        private java.lang.CharSequence HDMemoryInGB;
        private java.lang.CharSequence connectedClientsCPP;
        private java.lang.CharSequence connectedClientsDotNet;
        private java.lang.CharSequence connectedClientsJava;
        private java.lang.Long clusterUpTime;
        private java.lang.Long nodeUptime;
        private java.lang.CharSequence osName;
        private java.lang.CharSequence osArch;
        private java.lang.CharSequence osVersion;
        private java.lang.CharSequence jvmName;
        private java.lang.CharSequence jvmVersion;
        private java.lang.CharSequence connectedClientsNodeJS;
        private java.lang.CharSequence connectedClientsPython;
        private java.lang.CharSequence state;
        private java.lang.CharSequence jetVersion;
        private java.lang.CharSequence mcVersion;
        private java.lang.CharSequence mcLicense;
        private java.lang.CharSequence connectedClientsGo;
        private java.lang.Boolean oem;
        private java.lang.CharSequence groupVersion;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         * @param other The existing Builder to copy.
         */
        private Builder(CallHome.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.ip)) {
                this.ip = data().deepCopy(fields()[0].schema(), other.ip);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.version)) {
                this.version = data().deepCopy(fields()[1].schema(), other.version);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.pingTime)) {
                this.pingTime = data().deepCopy(fields()[2].schema(), other.pingTime);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.machineId)) {
                this.machineId = data().deepCopy(fields()[3].schema(), other.machineId);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.enterprise)) {
                this.enterprise = data().deepCopy(fields()[4].schema(), other.enterprise);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.license)) {
                this.license = data().deepCopy(fields()[5].schema(), other.license);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.pardotId)) {
                this.pardotId = data().deepCopy(fields()[6].schema(), other.pardotId);
                fieldSetFlags()[6] = true;
            }
            if (isValidValue(fields()[7], other.clusterId)) {
                this.clusterId = data().deepCopy(fields()[7].schema(), other.clusterId);
                fieldSetFlags()[7] = true;
            }
            if (isValidValue(fields()[8], other.clusterSize)) {
                this.clusterSize = data().deepCopy(fields()[8].schema(), other.clusterSize);
                fieldSetFlags()[8] = true;
            }
            if (isValidValue(fields()[9], other.clientsSize)) {
                this.clientsSize = data().deepCopy(fields()[9].schema(), other.clientsSize);
                fieldSetFlags()[9] = true;
            }
            if (isValidValue(fields()[10], other.org)) {
                this.org = data().deepCopy(fields()[10].schema(), other.org);
                fieldSetFlags()[10] = true;
            }
            if (isValidValue(fields()[11], other.city)) {
                this.city = data().deepCopy(fields()[11].schema(), other.city);
                fieldSetFlags()[11] = true;
            }
            if (isValidValue(fields()[12], other.country)) {
                this.country = data().deepCopy(fields()[12].schema(), other.country);
                fieldSetFlags()[12] = true;
            }
            if (isValidValue(fields()[13], other.lat)) {
                this.lat = data().deepCopy(fields()[13].schema(), other.lat);
                fieldSetFlags()[13] = true;
            }
            if (isValidValue(fields()[14], other.long$)) {
                this.long$ = data().deepCopy(fields()[14].schema(), other.long$);
                fieldSetFlags()[14] = true;
            }
            if (isValidValue(fields()[15], other.HDMemoryInGB)) {
                this.HDMemoryInGB = data().deepCopy(fields()[15].schema(), other.HDMemoryInGB);
                fieldSetFlags()[15] = true;
            }
            if (isValidValue(fields()[16], other.connectedClientsCPP)) {
                this.connectedClientsCPP = data().deepCopy(fields()[16].schema(), other.connectedClientsCPP);
                fieldSetFlags()[16] = true;
            }
            if (isValidValue(fields()[17], other.connectedClientsDotNet)) {
                this.connectedClientsDotNet = data().deepCopy(fields()[17].schema(), other.connectedClientsDotNet);
                fieldSetFlags()[17] = true;
            }
            if (isValidValue(fields()[18], other.connectedClientsJava)) {
                this.connectedClientsJava = data().deepCopy(fields()[18].schema(), other.connectedClientsJava);
                fieldSetFlags()[18] = true;
            }
            if (isValidValue(fields()[19], other.clusterUpTime)) {
                this.clusterUpTime = data().deepCopy(fields()[19].schema(), other.clusterUpTime);
                fieldSetFlags()[19] = true;
            }
            if (isValidValue(fields()[20], other.nodeUptime)) {
                this.nodeUptime = data().deepCopy(fields()[20].schema(), other.nodeUptime);
                fieldSetFlags()[20] = true;
            }
            if (isValidValue(fields()[21], other.osName)) {
                this.osName = data().deepCopy(fields()[21].schema(), other.osName);
                fieldSetFlags()[21] = true;
            }
            if (isValidValue(fields()[22], other.osArch)) {
                this.osArch = data().deepCopy(fields()[22].schema(), other.osArch);
                fieldSetFlags()[22] = true;
            }
            if (isValidValue(fields()[23], other.osVersion)) {
                this.osVersion = data().deepCopy(fields()[23].schema(), other.osVersion);
                fieldSetFlags()[23] = true;
            }
            if (isValidValue(fields()[24], other.jvmName)) {
                this.jvmName = data().deepCopy(fields()[24].schema(), other.jvmName);
                fieldSetFlags()[24] = true;
            }
            if (isValidValue(fields()[25], other.jvmVersion)) {
                this.jvmVersion = data().deepCopy(fields()[25].schema(), other.jvmVersion);
                fieldSetFlags()[25] = true;
            }
            if (isValidValue(fields()[26], other.connectedClientsNodeJS)) {
                this.connectedClientsNodeJS = data().deepCopy(fields()[26].schema(), other.connectedClientsNodeJS);
                fieldSetFlags()[26] = true;
            }
            if (isValidValue(fields()[27], other.connectedClientsPython)) {
                this.connectedClientsPython = data().deepCopy(fields()[27].schema(), other.connectedClientsPython);
                fieldSetFlags()[27] = true;
            }
            if (isValidValue(fields()[28], other.state)) {
                this.state = data().deepCopy(fields()[28].schema(), other.state);
                fieldSetFlags()[28] = true;
            }
            if (isValidValue(fields()[29], other.jetVersion)) {
                this.jetVersion = data().deepCopy(fields()[29].schema(), other.jetVersion);
                fieldSetFlags()[29] = true;
            }
            if (isValidValue(fields()[30], other.mcVersion)) {
                this.mcVersion = data().deepCopy(fields()[30].schema(), other.mcVersion);
                fieldSetFlags()[30] = true;
            }
            if (isValidValue(fields()[31], other.mcLicense)) {
                this.mcLicense = data().deepCopy(fields()[31].schema(), other.mcLicense);
                fieldSetFlags()[31] = true;
            }
            if (isValidValue(fields()[32], other.connectedClientsGo)) {
                this.connectedClientsGo = data().deepCopy(fields()[32].schema(), other.connectedClientsGo);
                fieldSetFlags()[32] = true;
            }
            if (isValidValue(fields()[33], other.oem)) {
                this.oem = data().deepCopy(fields()[33].schema(), other.oem);
                fieldSetFlags()[33] = true;
            }
            if (isValidValue(fields()[34], other.groupVersion)) {
                this.groupVersion = data().deepCopy(fields()[34].schema(), other.groupVersion);
                fieldSetFlags()[34] = true;
            }
        }

        /**
         * Creates a Builder by copying an existing CallHome instance
         * @param other The existing instance to copy.
         */
        private Builder(CallHome other) {
            super(SCHEMA$);
            if (isValidValue(fields()[0], other.ip)) {
                this.ip = data().deepCopy(fields()[0].schema(), other.ip);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.version)) {
                this.version = data().deepCopy(fields()[1].schema(), other.version);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.pingTime)) {
                this.pingTime = data().deepCopy(fields()[2].schema(), other.pingTime);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.machineId)) {
                this.machineId = data().deepCopy(fields()[3].schema(), other.machineId);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.enterprise)) {
                this.enterprise = data().deepCopy(fields()[4].schema(), other.enterprise);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.license)) {
                this.license = data().deepCopy(fields()[5].schema(), other.license);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.pardotId)) {
                this.pardotId = data().deepCopy(fields()[6].schema(), other.pardotId);
                fieldSetFlags()[6] = true;
            }
            if (isValidValue(fields()[7], other.clusterId)) {
                this.clusterId = data().deepCopy(fields()[7].schema(), other.clusterId);
                fieldSetFlags()[7] = true;
            }
            if (isValidValue(fields()[8], other.clusterSize)) {
                this.clusterSize = data().deepCopy(fields()[8].schema(), other.clusterSize);
                fieldSetFlags()[8] = true;
            }
            if (isValidValue(fields()[9], other.clientsSize)) {
                this.clientsSize = data().deepCopy(fields()[9].schema(), other.clientsSize);
                fieldSetFlags()[9] = true;
            }
            if (isValidValue(fields()[10], other.org)) {
                this.org = data().deepCopy(fields()[10].schema(), other.org);
                fieldSetFlags()[10] = true;
            }
            if (isValidValue(fields()[11], other.city)) {
                this.city = data().deepCopy(fields()[11].schema(), other.city);
                fieldSetFlags()[11] = true;
            }
            if (isValidValue(fields()[12], other.country)) {
                this.country = data().deepCopy(fields()[12].schema(), other.country);
                fieldSetFlags()[12] = true;
            }
            if (isValidValue(fields()[13], other.lat)) {
                this.lat = data().deepCopy(fields()[13].schema(), other.lat);
                fieldSetFlags()[13] = true;
            }
            if (isValidValue(fields()[14], other.long$)) {
                this.long$ = data().deepCopy(fields()[14].schema(), other.long$);
                fieldSetFlags()[14] = true;
            }
            if (isValidValue(fields()[15], other.HDMemoryInGB)) {
                this.HDMemoryInGB = data().deepCopy(fields()[15].schema(), other.HDMemoryInGB);
                fieldSetFlags()[15] = true;
            }
            if (isValidValue(fields()[16], other.connectedClientsCPP)) {
                this.connectedClientsCPP = data().deepCopy(fields()[16].schema(), other.connectedClientsCPP);
                fieldSetFlags()[16] = true;
            }
            if (isValidValue(fields()[17], other.connectedClientsDotNet)) {
                this.connectedClientsDotNet = data().deepCopy(fields()[17].schema(), other.connectedClientsDotNet);
                fieldSetFlags()[17] = true;
            }
            if (isValidValue(fields()[18], other.connectedClientsJava)) {
                this.connectedClientsJava = data().deepCopy(fields()[18].schema(), other.connectedClientsJava);
                fieldSetFlags()[18] = true;
            }
            if (isValidValue(fields()[19], other.clusterUpTime)) {
                this.clusterUpTime = data().deepCopy(fields()[19].schema(), other.clusterUpTime);
                fieldSetFlags()[19] = true;
            }
            if (isValidValue(fields()[20], other.nodeUptime)) {
                this.nodeUptime = data().deepCopy(fields()[20].schema(), other.nodeUptime);
                fieldSetFlags()[20] = true;
            }
            if (isValidValue(fields()[21], other.osName)) {
                this.osName = data().deepCopy(fields()[21].schema(), other.osName);
                fieldSetFlags()[21] = true;
            }
            if (isValidValue(fields()[22], other.osArch)) {
                this.osArch = data().deepCopy(fields()[22].schema(), other.osArch);
                fieldSetFlags()[22] = true;
            }
            if (isValidValue(fields()[23], other.osVersion)) {
                this.osVersion = data().deepCopy(fields()[23].schema(), other.osVersion);
                fieldSetFlags()[23] = true;
            }
            if (isValidValue(fields()[24], other.jvmName)) {
                this.jvmName = data().deepCopy(fields()[24].schema(), other.jvmName);
                fieldSetFlags()[24] = true;
            }
            if (isValidValue(fields()[25], other.jvmVersion)) {
                this.jvmVersion = data().deepCopy(fields()[25].schema(), other.jvmVersion);
                fieldSetFlags()[25] = true;
            }
            if (isValidValue(fields()[26], other.connectedClientsNodeJS)) {
                this.connectedClientsNodeJS = data().deepCopy(fields()[26].schema(), other.connectedClientsNodeJS);
                fieldSetFlags()[26] = true;
            }
            if (isValidValue(fields()[27], other.connectedClientsPython)) {
                this.connectedClientsPython = data().deepCopy(fields()[27].schema(), other.connectedClientsPython);
                fieldSetFlags()[27] = true;
            }
            if (isValidValue(fields()[28], other.state)) {
                this.state = data().deepCopy(fields()[28].schema(), other.state);
                fieldSetFlags()[28] = true;
            }
            if (isValidValue(fields()[29], other.jetVersion)) {
                this.jetVersion = data().deepCopy(fields()[29].schema(), other.jetVersion);
                fieldSetFlags()[29] = true;
            }
            if (isValidValue(fields()[30], other.mcVersion)) {
                this.mcVersion = data().deepCopy(fields()[30].schema(), other.mcVersion);
                fieldSetFlags()[30] = true;
            }
            if (isValidValue(fields()[31], other.mcLicense)) {
                this.mcLicense = data().deepCopy(fields()[31].schema(), other.mcLicense);
                fieldSetFlags()[31] = true;
            }
            if (isValidValue(fields()[32], other.connectedClientsGo)) {
                this.connectedClientsGo = data().deepCopy(fields()[32].schema(), other.connectedClientsGo);
                fieldSetFlags()[32] = true;
            }
            if (isValidValue(fields()[33], other.oem)) {
                this.oem = data().deepCopy(fields()[33].schema(), other.oem);
                fieldSetFlags()[33] = true;
            }
            if (isValidValue(fields()[34], other.groupVersion)) {
                this.groupVersion = data().deepCopy(fields()[34].schema(), other.groupVersion);
                fieldSetFlags()[34] = true;
            }
        }

        /**
         * Gets the value of the 'ip' field.
         * @return The value.
         */
        public java.lang.CharSequence getIp() {
            return ip;
        }

        /**
         * Sets the value of the 'ip' field.
         * @param value The value of 'ip'.
         * @return This builder.
         */
        public CallHome.Builder setIp(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.ip = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'ip' field has been set.
         * @return True if the 'ip' field has been set, false otherwise.
         */
        public boolean hasIp() {
            return fieldSetFlags()[0];
        }


        /**
         * Clears the value of the 'ip' field.
         * @return This builder.
         */
        public CallHome.Builder clearIp() {
            ip = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'version' field.
         * @return The value.
         */
        public java.lang.CharSequence getVersion() {
            return version;
        }

        /**
         * Sets the value of the 'version' field.
         * @param value The value of 'version'.
         * @return This builder.
         */
        public CallHome.Builder setVersion(java.lang.CharSequence value) {
            validate(fields()[1], value);
            this.version = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'version' field has been set.
         * @return True if the 'version' field has been set, false otherwise.
         */
        public boolean hasVersion() {
            return fieldSetFlags()[1];
        }


        /**
         * Clears the value of the 'version' field.
         * @return This builder.
         */
        public CallHome.Builder clearVersion() {
            version = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'pingTime' field.
         * @return The value.
         */
        public java.lang.Long getPingTime() {
            return pingTime;
        }

        /**
         * Sets the value of the 'pingTime' field.
         * @param value The value of 'pingTime'.
         * @return This builder.
         */
        public CallHome.Builder setPingTime(java.lang.Long value) {
            validate(fields()[2], value);
            this.pingTime = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'pingTime' field has been set.
         * @return True if the 'pingTime' field has been set, false otherwise.
         */
        public boolean hasPingTime() {
            return fieldSetFlags()[2];
        }


        /**
         * Clears the value of the 'pingTime' field.
         * @return This builder.
         */
        public CallHome.Builder clearPingTime() {
            pingTime = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'machineId' field.
         * @return The value.
         */
        public java.lang.CharSequence getMachineId() {
            return machineId;
        }

        /**
         * Sets the value of the 'machineId' field.
         * @param value The value of 'machineId'.
         * @return This builder.
         */
        public CallHome.Builder setMachineId(java.lang.CharSequence value) {
            validate(fields()[3], value);
            this.machineId = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'machineId' field has been set.
         * @return True if the 'machineId' field has been set, false otherwise.
         */
        public boolean hasMachineId() {
            return fieldSetFlags()[3];
        }


        /**
         * Clears the value of the 'machineId' field.
         * @return This builder.
         */
        public CallHome.Builder clearMachineId() {
            machineId = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'enterprise' field.
         * @return The value.
         */
        public java.lang.Boolean getEnterprise() {
            return enterprise;
        }

        /**
         * Sets the value of the 'enterprise' field.
         * @param value The value of 'enterprise'.
         * @return This builder.
         */
        public CallHome.Builder setEnterprise(java.lang.Boolean value) {
            validate(fields()[4], value);
            this.enterprise = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'enterprise' field has been set.
         * @return True if the 'enterprise' field has been set, false otherwise.
         */
        public boolean hasEnterprise() {
            return fieldSetFlags()[4];
        }


        /**
         * Clears the value of the 'enterprise' field.
         * @return This builder.
         */
        public CallHome.Builder clearEnterprise() {
            enterprise = null;
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'license' field.
         * @return The value.
         */
        public java.lang.CharSequence getLicense() {
            return license;
        }

        /**
         * Sets the value of the 'license' field.
         * @param value The value of 'license'.
         * @return This builder.
         */
        public CallHome.Builder setLicense(java.lang.CharSequence value) {
            validate(fields()[5], value);
            this.license = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'license' field has been set.
         * @return True if the 'license' field has been set, false otherwise.
         */
        public boolean hasLicense() {
            return fieldSetFlags()[5];
        }


        /**
         * Clears the value of the 'license' field.
         * @return This builder.
         */
        public CallHome.Builder clearLicense() {
            license = null;
            fieldSetFlags()[5] = false;
            return this;
        }

        /**
         * Gets the value of the 'pardotId' field.
         * @return The value.
         */
        public java.lang.CharSequence getPardotId() {
            return pardotId;
        }

        /**
         * Sets the value of the 'pardotId' field.
         * @param value The value of 'pardotId'.
         * @return This builder.
         */
        public CallHome.Builder setPardotId(java.lang.CharSequence value) {
            validate(fields()[6], value);
            this.pardotId = value;
            fieldSetFlags()[6] = true;
            return this;
        }

        /**
         * Checks whether the 'pardotId' field has been set.
         * @return True if the 'pardotId' field has been set, false otherwise.
         */
        public boolean hasPardotId() {
            return fieldSetFlags()[6];
        }


        /**
         * Clears the value of the 'pardotId' field.
         * @return This builder.
         */
        public CallHome.Builder clearPardotId() {
            pardotId = null;
            fieldSetFlags()[6] = false;
            return this;
        }

        /**
         * Gets the value of the 'clusterId' field.
         * @return The value.
         */
        public java.lang.CharSequence getClusterId() {
            return clusterId;
        }

        /**
         * Sets the value of the 'clusterId' field.
         * @param value The value of 'clusterId'.
         * @return This builder.
         */
        public CallHome.Builder setClusterId(java.lang.CharSequence value) {
            validate(fields()[7], value);
            this.clusterId = value;
            fieldSetFlags()[7] = true;
            return this;
        }

        /**
         * Checks whether the 'clusterId' field has been set.
         * @return True if the 'clusterId' field has been set, false otherwise.
         */
        public boolean hasClusterId() {
            return fieldSetFlags()[7];
        }


        /**
         * Clears the value of the 'clusterId' field.
         * @return This builder.
         */
        public CallHome.Builder clearClusterId() {
            clusterId = null;
            fieldSetFlags()[7] = false;
            return this;
        }

        /**
         * Gets the value of the 'clusterSize' field.
         * @return The value.
         */
        public java.lang.CharSequence getClusterSize() {
            return clusterSize;
        }

        /**
         * Sets the value of the 'clusterSize' field.
         * @param value The value of 'clusterSize'.
         * @return This builder.
         */
        public CallHome.Builder setClusterSize(java.lang.CharSequence value) {
            validate(fields()[8], value);
            this.clusterSize = value;
            fieldSetFlags()[8] = true;
            return this;
        }

        /**
         * Checks whether the 'clusterSize' field has been set.
         * @return True if the 'clusterSize' field has been set, false otherwise.
         */
        public boolean hasClusterSize() {
            return fieldSetFlags()[8];
        }


        /**
         * Clears the value of the 'clusterSize' field.
         * @return This builder.
         */
        public CallHome.Builder clearClusterSize() {
            clusterSize = null;
            fieldSetFlags()[8] = false;
            return this;
        }

        /**
         * Gets the value of the 'clientsSize' field.
         * @return The value.
         */
        public java.lang.CharSequence getClientsSize() {
            return clientsSize;
        }

        /**
         * Sets the value of the 'clientsSize' field.
         * @param value The value of 'clientsSize'.
         * @return This builder.
         */
        public CallHome.Builder setClientsSize(java.lang.CharSequence value) {
            validate(fields()[9], value);
            this.clientsSize = value;
            fieldSetFlags()[9] = true;
            return this;
        }

        /**
         * Checks whether the 'clientsSize' field has been set.
         * @return True if the 'clientsSize' field has been set, false otherwise.
         */
        public boolean hasClientsSize() {
            return fieldSetFlags()[9];
        }


        /**
         * Clears the value of the 'clientsSize' field.
         * @return This builder.
         */
        public CallHome.Builder clearClientsSize() {
            clientsSize = null;
            fieldSetFlags()[9] = false;
            return this;
        }

        /**
         * Gets the value of the 'org' field.
         * @return The value.
         */
        public java.lang.CharSequence getOrg() {
            return org;
        }

        /**
         * Sets the value of the 'org' field.
         * @param value The value of 'org'.
         * @return This builder.
         */
        public CallHome.Builder setOrg(java.lang.CharSequence value) {
            validate(fields()[10], value);
            this.org = value;
            fieldSetFlags()[10] = true;
            return this;
        }

        /**
         * Checks whether the 'org' field has been set.
         * @return True if the 'org' field has been set, false otherwise.
         */
        public boolean hasOrg() {
            return fieldSetFlags()[10];
        }


        /**
         * Clears the value of the 'org' field.
         * @return This builder.
         */
        public CallHome.Builder clearOrg() {
            org = null;
            fieldSetFlags()[10] = false;
            return this;
        }

        /**
         * Gets the value of the 'city' field.
         * @return The value.
         */
        public java.lang.CharSequence getCity() {
            return city;
        }

        /**
         * Sets the value of the 'city' field.
         * @param value The value of 'city'.
         * @return This builder.
         */
        public CallHome.Builder setCity(java.lang.CharSequence value) {
            validate(fields()[11], value);
            this.city = value;
            fieldSetFlags()[11] = true;
            return this;
        }

        /**
         * Checks whether the 'city' field has been set.
         * @return True if the 'city' field has been set, false otherwise.
         */
        public boolean hasCity() {
            return fieldSetFlags()[11];
        }


        /**
         * Clears the value of the 'city' field.
         * @return This builder.
         */
        public CallHome.Builder clearCity() {
            city = null;
            fieldSetFlags()[11] = false;
            return this;
        }

        /**
         * Gets the value of the 'country' field.
         * @return The value.
         */
        public java.lang.CharSequence getCountry() {
            return country;
        }

        /**
         * Sets the value of the 'country' field.
         * @param value The value of 'country'.
         * @return This builder.
         */
        public CallHome.Builder setCountry(java.lang.CharSequence value) {
            validate(fields()[12], value);
            this.country = value;
            fieldSetFlags()[12] = true;
            return this;
        }

        /**
         * Checks whether the 'country' field has been set.
         * @return True if the 'country' field has been set, false otherwise.
         */
        public boolean hasCountry() {
            return fieldSetFlags()[12];
        }


        /**
         * Clears the value of the 'country' field.
         * @return This builder.
         */
        public CallHome.Builder clearCountry() {
            country = null;
            fieldSetFlags()[12] = false;
            return this;
        }

        /**
         * Gets the value of the 'lat' field.
         * @return The value.
         */
        public java.lang.CharSequence getLat() {
            return lat;
        }

        /**
         * Sets the value of the 'lat' field.
         * @param value The value of 'lat'.
         * @return This builder.
         */
        public CallHome.Builder setLat(java.lang.CharSequence value) {
            validate(fields()[13], value);
            this.lat = value;
            fieldSetFlags()[13] = true;
            return this;
        }

        /**
         * Checks whether the 'lat' field has been set.
         * @return True if the 'lat' field has been set, false otherwise.
         */
        public boolean hasLat() {
            return fieldSetFlags()[13];
        }


        /**
         * Clears the value of the 'lat' field.
         * @return This builder.
         */
        public CallHome.Builder clearLat() {
            lat = null;
            fieldSetFlags()[13] = false;
            return this;
        }

        /**
         * Gets the value of the 'long$' field.
         * @return The value.
         */
        public java.lang.CharSequence getLong$() {
            return long$;
        }

        /**
         * Sets the value of the 'long$' field.
         * @param value The value of 'long$'.
         * @return This builder.
         */
        public CallHome.Builder setLong$(java.lang.CharSequence value) {
            validate(fields()[14], value);
            this.long$ = value;
            fieldSetFlags()[14] = true;
            return this;
        }

        /**
         * Checks whether the 'long$' field has been set.
         * @return True if the 'long$' field has been set, false otherwise.
         */
        public boolean hasLong$() {
            return fieldSetFlags()[14];
        }


        /**
         * Clears the value of the 'long$' field.
         * @return This builder.
         */
        public CallHome.Builder clearLong$() {
            long$ = null;
            fieldSetFlags()[14] = false;
            return this;
        }

        /**
         * Gets the value of the 'HDMemoryInGB' field.
         * @return The value.
         */
        public java.lang.CharSequence getHDMemoryInGB() {
            return HDMemoryInGB;
        }

        /**
         * Sets the value of the 'HDMemoryInGB' field.
         * @param value The value of 'HDMemoryInGB'.
         * @return This builder.
         */
        public CallHome.Builder setHDMemoryInGB(java.lang.CharSequence value) {
            validate(fields()[15], value);
            this.HDMemoryInGB = value;
            fieldSetFlags()[15] = true;
            return this;
        }

        /**
         * Checks whether the 'HDMemoryInGB' field has been set.
         * @return True if the 'HDMemoryInGB' field has been set, false otherwise.
         */
        public boolean hasHDMemoryInGB() {
            return fieldSetFlags()[15];
        }


        /**
         * Clears the value of the 'HDMemoryInGB' field.
         * @return This builder.
         */
        public CallHome.Builder clearHDMemoryInGB() {
            HDMemoryInGB = null;
            fieldSetFlags()[15] = false;
            return this;
        }

        /**
         * Gets the value of the 'connectedClientsCPP' field.
         * @return The value.
         */
        public java.lang.CharSequence getConnectedClientsCPP() {
            return connectedClientsCPP;
        }

        /**
         * Sets the value of the 'connectedClientsCPP' field.
         * @param value The value of 'connectedClientsCPP'.
         * @return This builder.
         */
        public CallHome.Builder setConnectedClientsCPP(java.lang.CharSequence value) {
            validate(fields()[16], value);
            this.connectedClientsCPP = value;
            fieldSetFlags()[16] = true;
            return this;
        }

        /**
         * Checks whether the 'connectedClientsCPP' field has been set.
         * @return True if the 'connectedClientsCPP' field has been set, false otherwise.
         */
        public boolean hasConnectedClientsCPP() {
            return fieldSetFlags()[16];
        }


        /**
         * Clears the value of the 'connectedClientsCPP' field.
         * @return This builder.
         */
        public CallHome.Builder clearConnectedClientsCPP() {
            connectedClientsCPP = null;
            fieldSetFlags()[16] = false;
            return this;
        }

        /**
         * Gets the value of the 'connectedClientsDotNet' field.
         * @return The value.
         */
        public java.lang.CharSequence getConnectedClientsDotNet() {
            return connectedClientsDotNet;
        }

        /**
         * Sets the value of the 'connectedClientsDotNet' field.
         * @param value The value of 'connectedClientsDotNet'.
         * @return This builder.
         */
        public CallHome.Builder setConnectedClientsDotNet(java.lang.CharSequence value) {
            validate(fields()[17], value);
            this.connectedClientsDotNet = value;
            fieldSetFlags()[17] = true;
            return this;
        }

        /**
         * Checks whether the 'connectedClientsDotNet' field has been set.
         * @return True if the 'connectedClientsDotNet' field has been set, false otherwise.
         */
        public boolean hasConnectedClientsDotNet() {
            return fieldSetFlags()[17];
        }


        /**
         * Clears the value of the 'connectedClientsDotNet' field.
         * @return This builder.
         */
        public CallHome.Builder clearConnectedClientsDotNet() {
            connectedClientsDotNet = null;
            fieldSetFlags()[17] = false;
            return this;
        }

        /**
         * Gets the value of the 'connectedClientsJava' field.
         * @return The value.
         */
        public java.lang.CharSequence getConnectedClientsJava() {
            return connectedClientsJava;
        }

        /**
         * Sets the value of the 'connectedClientsJava' field.
         * @param value The value of 'connectedClientsJava'.
         * @return This builder.
         */
        public CallHome.Builder setConnectedClientsJava(java.lang.CharSequence value) {
            validate(fields()[18], value);
            this.connectedClientsJava = value;
            fieldSetFlags()[18] = true;
            return this;
        }

        /**
         * Checks whether the 'connectedClientsJava' field has been set.
         * @return True if the 'connectedClientsJava' field has been set, false otherwise.
         */
        public boolean hasConnectedClientsJava() {
            return fieldSetFlags()[18];
        }


        /**
         * Clears the value of the 'connectedClientsJava' field.
         * @return This builder.
         */
        public CallHome.Builder clearConnectedClientsJava() {
            connectedClientsJava = null;
            fieldSetFlags()[18] = false;
            return this;
        }

        /**
         * Gets the value of the 'clusterUpTime' field.
         * @return The value.
         */
        public java.lang.Long getClusterUpTime() {
            return clusterUpTime;
        }

        /**
         * Sets the value of the 'clusterUpTime' field.
         * @param value The value of 'clusterUpTime'.
         * @return This builder.
         */
        public CallHome.Builder setClusterUpTime(java.lang.Long value) {
            validate(fields()[19], value);
            this.clusterUpTime = value;
            fieldSetFlags()[19] = true;
            return this;
        }

        /**
         * Checks whether the 'clusterUpTime' field has been set.
         * @return True if the 'clusterUpTime' field has been set, false otherwise.
         */
        public boolean hasClusterUpTime() {
            return fieldSetFlags()[19];
        }


        /**
         * Clears the value of the 'clusterUpTime' field.
         * @return This builder.
         */
        public CallHome.Builder clearClusterUpTime() {
            clusterUpTime = null;
            fieldSetFlags()[19] = false;
            return this;
        }

        /**
         * Gets the value of the 'nodeUptime' field.
         * @return The value.
         */
        public java.lang.Long getNodeUptime() {
            return nodeUptime;
        }

        /**
         * Sets the value of the 'nodeUptime' field.
         * @param value The value of 'nodeUptime'.
         * @return This builder.
         */
        public CallHome.Builder setNodeUptime(java.lang.Long value) {
            validate(fields()[20], value);
            this.nodeUptime = value;
            fieldSetFlags()[20] = true;
            return this;
        }

        /**
         * Checks whether the 'nodeUptime' field has been set.
         * @return True if the 'nodeUptime' field has been set, false otherwise.
         */
        public boolean hasNodeUptime() {
            return fieldSetFlags()[20];
        }


        /**
         * Clears the value of the 'nodeUptime' field.
         * @return This builder.
         */
        public CallHome.Builder clearNodeUptime() {
            nodeUptime = null;
            fieldSetFlags()[20] = false;
            return this;
        }

        /**
         * Gets the value of the 'osName' field.
         * @return The value.
         */
        public java.lang.CharSequence getOsName() {
            return osName;
        }

        /**
         * Sets the value of the 'osName' field.
         * @param value The value of 'osName'.
         * @return This builder.
         */
        public CallHome.Builder setOsName(java.lang.CharSequence value) {
            validate(fields()[21], value);
            this.osName = value;
            fieldSetFlags()[21] = true;
            return this;
        }

        /**
         * Checks whether the 'osName' field has been set.
         * @return True if the 'osName' field has been set, false otherwise.
         */
        public boolean hasOsName() {
            return fieldSetFlags()[21];
        }


        /**
         * Clears the value of the 'osName' field.
         * @return This builder.
         */
        public CallHome.Builder clearOsName() {
            osName = null;
            fieldSetFlags()[21] = false;
            return this;
        }

        /**
         * Gets the value of the 'osArch' field.
         * @return The value.
         */
        public java.lang.CharSequence getOsArch() {
            return osArch;
        }

        /**
         * Sets the value of the 'osArch' field.
         * @param value The value of 'osArch'.
         * @return This builder.
         */
        public CallHome.Builder setOsArch(java.lang.CharSequence value) {
            validate(fields()[22], value);
            this.osArch = value;
            fieldSetFlags()[22] = true;
            return this;
        }

        /**
         * Checks whether the 'osArch' field has been set.
         * @return True if the 'osArch' field has been set, false otherwise.
         */
        public boolean hasOsArch() {
            return fieldSetFlags()[22];
        }


        /**
         * Clears the value of the 'osArch' field.
         * @return This builder.
         */
        public CallHome.Builder clearOsArch() {
            osArch = null;
            fieldSetFlags()[22] = false;
            return this;
        }

        /**
         * Gets the value of the 'osVersion' field.
         * @return The value.
         */
        public java.lang.CharSequence getOsVersion() {
            return osVersion;
        }

        /**
         * Sets the value of the 'osVersion' field.
         * @param value The value of 'osVersion'.
         * @return This builder.
         */
        public CallHome.Builder setOsVersion(java.lang.CharSequence value) {
            validate(fields()[23], value);
            this.osVersion = value;
            fieldSetFlags()[23] = true;
            return this;
        }

        /**
         * Checks whether the 'osVersion' field has been set.
         * @return True if the 'osVersion' field has been set, false otherwise.
         */
        public boolean hasOsVersion() {
            return fieldSetFlags()[23];
        }


        /**
         * Clears the value of the 'osVersion' field.
         * @return This builder.
         */
        public CallHome.Builder clearOsVersion() {
            osVersion = null;
            fieldSetFlags()[23] = false;
            return this;
        }

        /**
         * Gets the value of the 'jvmName' field.
         * @return The value.
         */
        public java.lang.CharSequence getJvmName() {
            return jvmName;
        }

        /**
         * Sets the value of the 'jvmName' field.
         * @param value The value of 'jvmName'.
         * @return This builder.
         */
        public CallHome.Builder setJvmName(java.lang.CharSequence value) {
            validate(fields()[24], value);
            this.jvmName = value;
            fieldSetFlags()[24] = true;
            return this;
        }

        /**
         * Checks whether the 'jvmName' field has been set.
         * @return True if the 'jvmName' field has been set, false otherwise.
         */
        public boolean hasJvmName() {
            return fieldSetFlags()[24];
        }


        /**
         * Clears the value of the 'jvmName' field.
         * @return This builder.
         */
        public CallHome.Builder clearJvmName() {
            jvmName = null;
            fieldSetFlags()[24] = false;
            return this;
        }

        /**
         * Gets the value of the 'jvmVersion' field.
         * @return The value.
         */
        public java.lang.CharSequence getJvmVersion() {
            return jvmVersion;
        }

        /**
         * Sets the value of the 'jvmVersion' field.
         * @param value The value of 'jvmVersion'.
         * @return This builder.
         */
        public CallHome.Builder setJvmVersion(java.lang.CharSequence value) {
            validate(fields()[25], value);
            this.jvmVersion = value;
            fieldSetFlags()[25] = true;
            return this;
        }

        /**
         * Checks whether the 'jvmVersion' field has been set.
         * @return True if the 'jvmVersion' field has been set, false otherwise.
         */
        public boolean hasJvmVersion() {
            return fieldSetFlags()[25];
        }


        /**
         * Clears the value of the 'jvmVersion' field.
         * @return This builder.
         */
        public CallHome.Builder clearJvmVersion() {
            jvmVersion = null;
            fieldSetFlags()[25] = false;
            return this;
        }

        /**
         * Gets the value of the 'connectedClientsNodeJS' field.
         * @return The value.
         */
        public java.lang.CharSequence getConnectedClientsNodeJS() {
            return connectedClientsNodeJS;
        }

        /**
         * Sets the value of the 'connectedClientsNodeJS' field.
         * @param value The value of 'connectedClientsNodeJS'.
         * @return This builder.
         */
        public CallHome.Builder setConnectedClientsNodeJS(java.lang.CharSequence value) {
            validate(fields()[26], value);
            this.connectedClientsNodeJS = value;
            fieldSetFlags()[26] = true;
            return this;
        }

        /**
         * Checks whether the 'connectedClientsNodeJS' field has been set.
         * @return True if the 'connectedClientsNodeJS' field has been set, false otherwise.
         */
        public boolean hasConnectedClientsNodeJS() {
            return fieldSetFlags()[26];
        }


        /**
         * Clears the value of the 'connectedClientsNodeJS' field.
         * @return This builder.
         */
        public CallHome.Builder clearConnectedClientsNodeJS() {
            connectedClientsNodeJS = null;
            fieldSetFlags()[26] = false;
            return this;
        }

        /**
         * Gets the value of the 'connectedClientsPython' field.
         * @return The value.
         */
        public java.lang.CharSequence getConnectedClientsPython() {
            return connectedClientsPython;
        }

        /**
         * Sets the value of the 'connectedClientsPython' field.
         * @param value The value of 'connectedClientsPython'.
         * @return This builder.
         */
        public CallHome.Builder setConnectedClientsPython(java.lang.CharSequence value) {
            validate(fields()[27], value);
            this.connectedClientsPython = value;
            fieldSetFlags()[27] = true;
            return this;
        }

        /**
         * Checks whether the 'connectedClientsPython' field has been set.
         * @return True if the 'connectedClientsPython' field has been set, false otherwise.
         */
        public boolean hasConnectedClientsPython() {
            return fieldSetFlags()[27];
        }


        /**
         * Clears the value of the 'connectedClientsPython' field.
         * @return This builder.
         */
        public CallHome.Builder clearConnectedClientsPython() {
            connectedClientsPython = null;
            fieldSetFlags()[27] = false;
            return this;
        }

        /**
         * Gets the value of the 'state' field.
         * @return The value.
         */
        public java.lang.CharSequence getState() {
            return state;
        }

        /**
         * Sets the value of the 'state' field.
         * @param value The value of 'state'.
         * @return This builder.
         */
        public CallHome.Builder setState(java.lang.CharSequence value) {
            validate(fields()[28], value);
            this.state = value;
            fieldSetFlags()[28] = true;
            return this;
        }

        /**
         * Checks whether the 'state' field has been set.
         * @return True if the 'state' field has been set, false otherwise.
         */
        public boolean hasState() {
            return fieldSetFlags()[28];
        }


        /**
         * Clears the value of the 'state' field.
         * @return This builder.
         */
        public CallHome.Builder clearState() {
            state = null;
            fieldSetFlags()[28] = false;
            return this;
        }

        /**
         * Gets the value of the 'jetVersion' field.
         * @return The value.
         */
        public java.lang.CharSequence getJetVersion() {
            return jetVersion;
        }

        /**
         * Sets the value of the 'jetVersion' field.
         * @param value The value of 'jetVersion'.
         * @return This builder.
         */
        public CallHome.Builder setJetVersion(java.lang.CharSequence value) {
            validate(fields()[29], value);
            this.jetVersion = value;
            fieldSetFlags()[29] = true;
            return this;
        }

        /**
         * Checks whether the 'jetVersion' field has been set.
         * @return True if the 'jetVersion' field has been set, false otherwise.
         */
        public boolean hasJetVersion() {
            return fieldSetFlags()[29];
        }


        /**
         * Clears the value of the 'jetVersion' field.
         * @return This builder.
         */
        public CallHome.Builder clearJetVersion() {
            jetVersion = null;
            fieldSetFlags()[29] = false;
            return this;
        }

        /**
         * Gets the value of the 'mcVersion' field.
         * @return The value.
         */
        public java.lang.CharSequence getMcVersion() {
            return mcVersion;
        }

        /**
         * Sets the value of the 'mcVersion' field.
         * @param value The value of 'mcVersion'.
         * @return This builder.
         */
        public CallHome.Builder setMcVersion(java.lang.CharSequence value) {
            validate(fields()[30], value);
            this.mcVersion = value;
            fieldSetFlags()[30] = true;
            return this;
        }

        /**
         * Checks whether the 'mcVersion' field has been set.
         * @return True if the 'mcVersion' field has been set, false otherwise.
         */
        public boolean hasMcVersion() {
            return fieldSetFlags()[30];
        }


        /**
         * Clears the value of the 'mcVersion' field.
         * @return This builder.
         */
        public CallHome.Builder clearMcVersion() {
            mcVersion = null;
            fieldSetFlags()[30] = false;
            return this;
        }

        /**
         * Gets the value of the 'mcLicense' field.
         * @return The value.
         */
        public java.lang.CharSequence getMcLicense() {
            return mcLicense;
        }

        /**
         * Sets the value of the 'mcLicense' field.
         * @param value The value of 'mcLicense'.
         * @return This builder.
         */
        public CallHome.Builder setMcLicense(java.lang.CharSequence value) {
            validate(fields()[31], value);
            this.mcLicense = value;
            fieldSetFlags()[31] = true;
            return this;
        }

        /**
         * Checks whether the 'mcLicense' field has been set.
         * @return True if the 'mcLicense' field has been set, false otherwise.
         */
        public boolean hasMcLicense() {
            return fieldSetFlags()[31];
        }


        /**
         * Clears the value of the 'mcLicense' field.
         * @return This builder.
         */
        public CallHome.Builder clearMcLicense() {
            mcLicense = null;
            fieldSetFlags()[31] = false;
            return this;
        }

        /**
         * Gets the value of the 'connectedClientsGo' field.
         * @return The value.
         */
        public java.lang.CharSequence getConnectedClientsGo() {
            return connectedClientsGo;
        }

        /**
         * Sets the value of the 'connectedClientsGo' field.
         * @param value The value of 'connectedClientsGo'.
         * @return This builder.
         */
        public CallHome.Builder setConnectedClientsGo(java.lang.CharSequence value) {
            validate(fields()[32], value);
            this.connectedClientsGo = value;
            fieldSetFlags()[32] = true;
            return this;
        }

        /**
         * Checks whether the 'connectedClientsGo' field has been set.
         * @return True if the 'connectedClientsGo' field has been set, false otherwise.
         */
        public boolean hasConnectedClientsGo() {
            return fieldSetFlags()[32];
        }


        /**
         * Clears the value of the 'connectedClientsGo' field.
         * @return This builder.
         */
        public CallHome.Builder clearConnectedClientsGo() {
            connectedClientsGo = null;
            fieldSetFlags()[32] = false;
            return this;
        }

        /**
         * Gets the value of the 'oem' field.
         * @return The value.
         */
        public java.lang.Boolean getOem() {
            return oem;
        }

        /**
         * Sets the value of the 'oem' field.
         * @param value The value of 'oem'.
         * @return This builder.
         */
        public CallHome.Builder setOem(java.lang.Boolean value) {
            validate(fields()[33], value);
            this.oem = value;
            fieldSetFlags()[33] = true;
            return this;
        }

        /**
         * Checks whether the 'oem' field has been set.
         * @return True if the 'oem' field has been set, false otherwise.
         */
        public boolean hasOem() {
            return fieldSetFlags()[33];
        }


        /**
         * Clears the value of the 'oem' field.
         * @return This builder.
         */
        public CallHome.Builder clearOem() {
            oem = null;
            fieldSetFlags()[33] = false;
            return this;
        }

        /**
         * Gets the value of the 'groupVersion' field.
         * @return The value.
         */
        public java.lang.CharSequence getGroupVersion() {
            return groupVersion;
        }

        /**
         * Sets the value of the 'groupVersion' field.
         * @param value The value of 'groupVersion'.
         * @return This builder.
         */
        public CallHome.Builder setGroupVersion(java.lang.CharSequence value) {
            validate(fields()[34], value);
            this.groupVersion = value;
            fieldSetFlags()[34] = true;
            return this;
        }

        /**
         * Checks whether the 'groupVersion' field has been set.
         * @return True if the 'groupVersion' field has been set, false otherwise.
         */
        public boolean hasGroupVersion() {
            return fieldSetFlags()[34];
        }


        /**
         * Clears the value of the 'groupVersion' field.
         * @return This builder.
         */
        public CallHome.Builder clearGroupVersion() {
            groupVersion = null;
            fieldSetFlags()[34] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public CallHome build() {
            try {
                CallHome record = new CallHome();
                record.ip = fieldSetFlags()[0] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.version = fieldSetFlags()[1] ? this.version : (java.lang.CharSequence) defaultValue(fields()[1]);
                record.pingTime = fieldSetFlags()[2] ? this.pingTime : (java.lang.Long) defaultValue(fields()[2]);
                record.machineId = fieldSetFlags()[3] ? this.machineId : (java.lang.CharSequence) defaultValue(fields()[3]);
                record.enterprise = fieldSetFlags()[4] ? this.enterprise : (java.lang.Boolean) defaultValue(fields()[4]);
                record.license = fieldSetFlags()[5] ? this.license : (java.lang.CharSequence) defaultValue(fields()[5]);
                record.pardotId = fieldSetFlags()[6] ? this.pardotId : (java.lang.CharSequence) defaultValue(fields()[6]);
                record.clusterId = fieldSetFlags()[7] ? this.clusterId : (java.lang.CharSequence) defaultValue(fields()[7]);
                record.clusterSize = fieldSetFlags()[8] ? this.clusterSize : (java.lang.CharSequence) defaultValue(fields()[8]);
                record.clientsSize = fieldSetFlags()[9] ? this.clientsSize : (java.lang.CharSequence) defaultValue(fields()[9]);
                record.org = fieldSetFlags()[10] ? this.org : (java.lang.CharSequence) defaultValue(fields()[10]);
                record.city = fieldSetFlags()[11] ? this.city : (java.lang.CharSequence) defaultValue(fields()[11]);
                record.country = fieldSetFlags()[12] ? this.country : (java.lang.CharSequence) defaultValue(fields()[12]);
                record.lat = fieldSetFlags()[13] ? this.lat : (java.lang.CharSequence) defaultValue(fields()[13]);
                record.long$ = fieldSetFlags()[14] ? this.long$ : (java.lang.CharSequence) defaultValue(fields()[14]);
                record.HDMemoryInGB = fieldSetFlags()[15] ? this.HDMemoryInGB : (java.lang.CharSequence) defaultValue(fields()[15]);
                record.connectedClientsCPP = fieldSetFlags()[16] ? this.connectedClientsCPP : (java.lang.CharSequence) defaultValue(fields()[16]);
                record.connectedClientsDotNet = fieldSetFlags()[17] ? this.connectedClientsDotNet : (java.lang.CharSequence) defaultValue(fields()[17]);
                record.connectedClientsJava = fieldSetFlags()[18] ? this.connectedClientsJava : (java.lang.CharSequence) defaultValue(fields()[18]);
                record.clusterUpTime = fieldSetFlags()[19] ? this.clusterUpTime : (java.lang.Long) defaultValue(fields()[19]);
                record.nodeUptime = fieldSetFlags()[20] ? this.nodeUptime : (java.lang.Long) defaultValue(fields()[20]);
                record.osName = fieldSetFlags()[21] ? this.osName : (java.lang.CharSequence) defaultValue(fields()[21]);
                record.osArch = fieldSetFlags()[22] ? this.osArch : (java.lang.CharSequence) defaultValue(fields()[22]);
                record.osVersion = fieldSetFlags()[23] ? this.osVersion : (java.lang.CharSequence) defaultValue(fields()[23]);
                record.jvmName = fieldSetFlags()[24] ? this.jvmName : (java.lang.CharSequence) defaultValue(fields()[24]);
                record.jvmVersion = fieldSetFlags()[25] ? this.jvmVersion : (java.lang.CharSequence) defaultValue(fields()[25]);
                record.connectedClientsNodeJS = fieldSetFlags()[26] ? this.connectedClientsNodeJS : (java.lang.CharSequence) defaultValue(fields()[26]);
                record.connectedClientsPython = fieldSetFlags()[27] ? this.connectedClientsPython : (java.lang.CharSequence) defaultValue(fields()[27]);
                record.state = fieldSetFlags()[28] ? this.state : (java.lang.CharSequence) defaultValue(fields()[28]);
                record.jetVersion = fieldSetFlags()[29] ? this.jetVersion : (java.lang.CharSequence) defaultValue(fields()[29]);
                record.mcVersion = fieldSetFlags()[30] ? this.mcVersion : (java.lang.CharSequence) defaultValue(fields()[30]);
                record.mcLicense = fieldSetFlags()[31] ? this.mcLicense : (java.lang.CharSequence) defaultValue(fields()[31]);
                record.connectedClientsGo = fieldSetFlags()[32] ? this.connectedClientsGo : (java.lang.CharSequence) defaultValue(fields()[32]);
                record.oem = fieldSetFlags()[33] ? this.oem : (java.lang.Boolean) defaultValue(fields()[33]);
                record.groupVersion = fieldSetFlags()[34] ? this.groupVersion : (java.lang.CharSequence) defaultValue(fields()[34]);
                return record;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<CallHome>
            WRITER$ = (org.apache.avro.io.DatumWriter<CallHome>)MODEL$.createDatumWriter(SCHEMA$);

    @Override public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<CallHome>
            READER$ = (org.apache.avro.io.DatumReader<CallHome>)MODEL$.createDatumReader(SCHEMA$);

    @Override public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

}